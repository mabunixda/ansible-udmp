---

- name: onboot - query package version
  register: onboot_version
  raw: "{{ unifi_os_cmd }} dpkg-query --showformat='${Version}' --show udm-boot"

- name: onboot - installation
  when: onboot_version is not defined or ( onboot_version.stdout is defined and onboot_version.stdout != udm_onboot_version )
  block:
    - name: onboot - download package
      raw: curl -L "{{ udm_onboot_download_uri }}" -o "{{ unifi_mount_path }}/unifi-os/udm-boot-{{ udm_onboot_version }}.deb"
    - name: onboot - install package
      raw: "{{ unifi_os_cmd }} dpkg -i {{ unifi_os_mount_path }}/udm-boot-{{ udm_onboot_version }}.deb"

- name: onboot - ensure onboot directory exists
  raw: mkdir -p "{{ unifi_onboot_directory }}"

- name: onboot - deploy custom configurations
  delegate_to: localhost
  become: no
  with_items:
    - { file: "files/00-onboot-sshkeys.sh", enabled: yes }
    - { file: "files/05-onboot-container.sh", enabled: yes }
    - { file: "files/10-onboot-frr.sh", enabled: "{{ frr_enabled | bool }}" }
    - { file: "files/10-onboot-rsyncd.sh", enabled: "{{ rsyncd_enabled | bool }}" }
    - { file: "files/10-onboot-nodeexporter.sh", enabled: "{{ nodeexporter_enabled | bool }}" }
    - { file: "files/10-onboot-openvpn.sh", enabled: "{{ openvpn_enabled | bool }}"  }
    - { file: "files/10-onboot-zerotier.sh", enabled: "{{ zerotier_enabled | bool }}" }
    - { file: "files/10-onboot-cloudflare-ddns.sh", enabled: "{{ cloudflare_enabled | bool }}" }
  shell:
    cmd: "[ '{{ item.enabled }}' = 'True' ] \
            && scp {{ role_path }}/{{ item.file }} {{ inventory_hostname }}:{{ unifi_onboot_directory }}/ \
            || echo 'item disabled: {{ item.file }}'"

- name: onboot - enable executable flag on configurations
  raw: chmod +x {{ unifi_onboot_directory }}/*.sh

- name: deploy cloudflare configuration
  when: cloudflare_enabled
  tags:
    - cloudflare
  template:
    src: cloudflare_config.json.j2
    dest: /mnt/data/cloudflare-ddns/config.json
    mode: 0644
